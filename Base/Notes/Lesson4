//ФУНКЦИИ
//функции - сложный тип данных, работают как ссылка
//родительский тип - объект
//function declaration - function blah(), доступна везде; function expression - var blah = function, доступна только после объявления, но имеет приоритет

//глобальный объект (window, весь наш код, в нём глобальные переменные, которые видны везде)
// window.a = 5

//контекст (область видимости) - либо window, либо функция
//переменные внутри функции абсолютно недоступны извне, только изнутри функции; но функция может обратиться к внешним переменным;
//но если объявлять переменную без var, то они будут глобальными

//hoisting переменных - все переменые объявляются в самом верху кода (невидимо поднимаются наверх компилятором), а значение им уже присваивается на той строке, где мы это написали;

//lexical environment - объект, который инициализируется при создании функции, в него добавляются глобальные переменные, локальные и ключи (аргументы) функции
//и имена аргументов затирают внешние переменные с тем же именем
//этикет ДжС - не больше 5-6 аргументов в фукнции, если надо больше, то лучше сделать аргумент объектом и передавать уже в него значения

//функция всегда что-то возвращает
//оператор return завершает выполение текущей функции, выбрасывает из области видимости. всё, что после него, уже не видится и не выполняется
//если нечего возвращать (если нет явного return) - вернёт undefined

function multiply(x, y) {
    return x * y;
};

multiply(6, 4);

var result = multiply(6, 4);

//функция либо возвращает что-то (геттеры), либо делают какую-то логику (например, показать все возможные ошибки)


//РАБОТА СО СТРОКАМИ
var str = "Zloridla Kusidla";
var l = str.length; //количество символов в строке, 0 для пустой строки
console.log(l);

//метод charAt() - указанный символ из строки (индекс начинается с 0);
var letter = str.charAt(1); //+ чтобы превратить в цифру
console.log(letter);

//метод indexOf - два параметра; найти букву в строке, возвращает индекс первого вхождения буквы в строку; регистрозависимый; можно не один символ (слово), но тогда вернёт первую позицию
var k = str.indexOf("K");
console.log(k);

var name = prompt('What is your name?');
var n = name.indexOf("l");
console.log(n);

//мы можем указать, с какой позиции (включительно) мы хотим начать поиск - это второй параметр метода

//метод lastIndexOf() - ищет с конца

//метод repeat() - повторяет её столько раз, сколько мы передали в аргументе

//метод replace(,) - заменяет "первый параметр" на "второй параметр", но не меняет исходную строку, надо сохранять в новую переменную (но только в первом вхождении, либо же можно или циклами, или регулярными выражениями)

// ПОСМОТРЕТЬ, ЧТО ТАКОЕ РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ
// ПОСМОТРЕТЬ, ЧТО ТАКОЕ БИБЛИОТЕКИ

//метод slice извлекает часть строки (с такого символа по такой символ - или до конца)
console.log(str.slice(4));
console.log(str.slice(0, 3));
console.log(str.slice(4, -2));

//метод split - разделяет строку, создаёт массив по тому разделителю, который передаём. если передали пустую строку, то разделяет посимвольно
var kus = str.split(" ");
console.log(kus);

var namelast = prompt('Enter your name and last name');
var split = namelast.split(" ");
var namehere = split[0];
var lastnamehere = split[1];
console.log(`Hello ${lastnamehere}, your name is ${namehere}`);

var strage = "My name is Zariana, my age: 28, I love ferrets, they are nice";
var a = strage.indexOf("age:");
var b = strage.indexOf(",", a);
var c = strage.slice(a+4, b);
var d = c.replace(" ", "");
console.log(d);

//метод substr() - первый аргумент: с какого символа начинаем, второй: сколько хотим вырезать, сохраняем в отдельную строку вырезанное

//метод trim() удаляет пробелы (только в начале или конце) - аргументов не надо


//РАБОТА С МАССИВАМИ
//метод length - возвращает длину массива

//метод Array.isArray() - true/false, является ли массивом (потому что тип его - объект, поэтому надо иметь отдельный метод для проверки массива)

//метод pop() удаляет последний элемент массива и возвращает его значение - надо записывать в переменную, если надо(изменяет исходный массив)

//метод shift() удаляет первый элемент массива и возвращает его значение, сдвигает всё, изменяет длину массива

//метод unshift() добавляет один или более элементов (через запятую) в начало массива, изменяет длину массива, возвращает длину массива итогового

//метод push() добавляет один или более элементов (через запятую) в конец массива, изменяет длину массива, возвращает длину массива итогового

//метод reverse() обращает порядок элементов массива с конца в начало, изменяет массив

//метод join() объединяет массив в строку через определённый разделитель (пробел, дефис, пустая строка)

var str = "Hi Lily";

str.split("").reverse().join("");
